CREATE DATABASE music DEFAULT CHARACTER SET utf8;

CREATE TABLE Artist(
	
	artist_id INTEGER NOT NULL AUTO_INCREMENT,
	name VARCHAR(255),
	
	PRIMARY KEY(artist_id)
)ENGINE=InnoDB;

CREATE TABLE Album(
	album_id INTEGER NOT NULL AUTO_INCREMENT,
	title VARCHAR(255),
	artist_id INTEGER,

	PRIMARY KEY(album_id),
	INDEX USING BTREE(title),

	CONSTRAINT FOREIGN KEY(artist_id) REFERENCES Artist(artist_id)
	ON DELETE CASCADE ON UPDATE CASCADE 
)ENGINE=InnoDB;

CREATE TABLE Genre(
	genre_id INTEGER NOT NULL AUTO_INCREMENT,
	name VARCHAR(255),
	
	PRIMARY KEY(genre_id),
	INDEX USING BTREE(name)
)ENGINE=InnoDB;

CREATE TABLE Track(
	track_id INTEGER NOT NULL AUTO_INCREMENT,
	title VARCHAR(255),
	len INTEGER,
	rating INTEGER,
	count INTEGER,
	album_id INTEGER,
	genre_id iNTEGER,
 
	PRIMARY KEY(track_id),
	INDEX USING BTREE(title),

	CONSTRAINT FOREIGN KEY(album_id) REFERENCES Album(album_id),
	CONSTRAINT FOREIGN KEY(genre_id) REFERENCES Genre(genre_id)
	ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=InnoDB;


SELECT Album.title,Artist.name FROM Album JOIN Artist ON Album.artist_id = Artist.artist_id;

SELECT Track.title,Artist.name,Album.title,Genre.name FROM Track JOIN Album JOIN Genre JOIN Artist 
ON Album.artist_id=Artist.artist_id AND Track.album_id=Album.album_id AND Genre.genre_id=Track.Genre_id;

Screen shot (JPG or PNG) of all the data joined up sorted in ascending order by the album title

SELECT Track.title,Track.track_id,Artist.name,Artist.artist_id,Album.title,Album.album_id,Genre.name,Genre.genre_id  FROM Track JOIN Album JOIN Genre JOIN Artist 
ON Album.artist_id=Artist.artist_id AND Track.album_id=Album.album_id AND Genre.genre_id=Track.Genre_id ORDER BY Album.title;


Screen shot (JPG or PNG) of all of the genres for a particular artist. Hint - use JOIN, DISTINCT and WHERE

SELECT DISTINCT Artist.name,Genre.name FROM Artist JOIN Album JOIN Track JOIN Genre WHERE Artist.artist_id=Album.album_id AND Album.album_id=Track.album_id AND 
Track.genre_id=Genre.genre_id
